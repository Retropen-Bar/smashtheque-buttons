import os
import discord
from discord.ui import Button, View
from discord.ui.item import ItemCallbackType
from discord.ext import commands

messages = ["""**__R√¥les Leboncoin Smashth√®que__**
R√©agissez aux commandes de votre choix pour vous assigner un r√¥le!

**__D√©finitions__**
Je fais partie des <@&777960675150528513> **si je suis un joueur int√©ress√© pour faire partie d'une √©quipe.**
--> Direction <#777958485434302464> ;

Je fais partie des <@&777960510880219188> **si je suis un capitaine d'√©quipe int√©ress√© pour recruter un ou des joueurs.**
--> Direction <#777958454152658986> ;

Je fais partie des <@&777960785128980530> **si je suis un streamer int√©ress√© pour streamer les √©v√©nements d'autres joueurs ou √©quipes.**
--> Vous serez ping dans <#777958649082937354> et vous pouvez vous pr√©senter dans <#792032632216748042> ;

Je fais partie des <@&777960736508215326> **si je suis un graphiste int√©ress√© pour √™tre tagu√© afin de venir en aide √† une communaut√© dans la r√©alisation de graphs, de banni√®res, ou autre.**
--> Vous serez ping dans <#777958677306277948> et vous pouvez vous pr√©senter dans <#790249146488586281> ;

Je fais partie des <@&798296784433578015> **si je suis un admin de tournoi dispo pour filer un coup de main √† un autre admin qui a besoin de soutien pour mod√©rer son tournoi**
--> Vous serez ping dans <#798287271030947862>

üíô = **Joueur libre**
üíö = **Equipe libre**
üíú = **Streamer libre**
‚ù§Ô∏è = **Graphiste libre**
üíõ = **TO libre**""", """**__R√¥les Notifications de mise √† jour Smashth√®que__**
R√©agissez aux commandes de votre choix pour vous assigner un r√¥le!

**__D√©finitions__**

Je prends le r√¥le <@&798300803009478657> **pour √™tre inform√© de toutes les nouveaut√©s li√©es √† l'agencement, √† l'organisation, √† l'√©volution du Discord**
Je prends le r√¥le <@&798300268491178034> **pour √™tre inform√© des mises √† jour li√©es √† l'ergonomie du site, aux nouvelles fonctionnalit√©s sur le site et sur Discord**
Je prends le r√¥le <@&798299938459090984> **pour √™tre inform√© des mises √† jour esth√©tiques du site web**
Je prends le r√¥le <@&798299789413974036> **pour √™tre inform√© d'absolument toutes les mises √† jour, m√™mes mineures, de l'Observatoire d'Harmonie (ajout de nouvelles et d'anciennes √©ditions, notamment, ou relectures compl√®tes d'une s√©rie de tournois, ou encore ajout de graphs aux √©ditions qui en sont d√©pourvues, par exemple)**
Je prends le r√¥le <@&798963826749079582> **pour √™tre inform√© de nos tweets et nos mises √† jour globales**

<:DrMario:739080111554428948> = **Mises √† jour Discord**
<:ROB:737480515946545172> = **Mises √† jour d√©veloppeurs**
<:Graphiste:752212651421204560> = **Mises √† jour design**
<:soleil:743285915413250059> = **Mises √† jour Harmonie**
<:Falco:739080111852355725> = **Mises √† jour Twitter**
""", """**__R√¥les Smashth√®que 2.0__**
R√©agissez aux commandes de votre choix pour vous assigner un r√¥le!

**__D√©finitions__**

Je prends le r√¥le <@&798304550460719135> **si je veux √™tre inform√© de toute information publi√©e concernant la Charte du fair-play de la Smashth√®que**
Je prends le r√¥le <@&798305000316600350> **si je suis un TO qui a l'intention de faire appliquer la Charte du fair-play dans son tournoi**

<:Lune:743285273353257051> = **Mises √† jour et infos Charte du fair-play**
<:etoile:743286485930868827> = **Candidature TO Charte du fair-play**""", """
**__Synchronisation de mon profil__**
Le r√¥le <@&738953314237939783> / <@&738952955495186528> vous est automatiquement ajout√© si vous √™tes not√©s comme TO d'au moins un tournois. Si vous √™tes TO d'un tournois, mais n'avez pas le r√¥le, cliquez sur le bouton ci dessous pour rafra√Æchir vos r√¥les.
Vous pouvez aussi utiliser ce bouton afin de synchroniser vos donn√©s discord sur votre profil smashth√®que (comme votre photo de profil)
"""]

BOT_TOKEN = os.environ.get('BOT_TOKEN')
BEARER_TOKEN = os.environ.get('BEARER_TOKEN')

roles = [777960675150528513]
headers = {"Authorization": f"Bearer {BEARER_TOKEN}", "Content-Type": "application/json"}

async def add_role(interaction: ItemCallbackType, role_id, bot):
    role:discord.Role = bot.get_guild(737431333478989907).get_role(role_id)
    member:discord.Member = bot.get_guild(737431333478989907).get_member(interaction.user.id)
    for member_role in member.roles:
        if role == member_role:
            await member.remove_roles(role)
            await interaction.response.send_message(f"Le r√¥le {role.mention} vous a √©t√© retir√©", ephemeral=True)
            return

    await member.add_roles(role)
    await interaction.response.send_message(f"Le r√¥le {role.mention} vous a √©t√© ajout√©", ephemeral=True)

class PersistantButtonsFirst(View):
    def __init__(self, bot):
        self.bot = bot
        super().__init__(timeout=None)

    @discord.ui.button(label="Joueurs Libres", style= discord.ButtonStyle.blurple, custom_id='role_button:JoueursLibres', emoji="üíô")
    async def JoueursLibres(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 777960675150528513
        await add_role(interaction, role_id, self.bot)
    @discord.ui.button(label="Equipes Libres", style= discord.ButtonStyle.blurple, custom_id='role_button:EquipesLibres', emoji="üíö")
    async def EquipesLibres(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 777960510880219188
        await add_role(interaction, role_id, self.bot)
    @discord.ui.button(label="Streamers Libres", style= discord.ButtonStyle.blurple, custom_id='role_button:StreamersLibres', emoji="üíú")
    async def StreamersLibres(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 777960785128980530
        await add_role(interaction, role_id, self.bot)
    @discord.ui.button(label="Graphistes Libres", style= discord.ButtonStyle.blurple, custom_id='role_button:GraphistesLibres', emoji="‚ù§Ô∏è")
    async def GraphistesLibres(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 777960736508215326
        await add_role(interaction, role_id, self.bot)
    @discord.ui.button(label="TOs Libres", style= discord.ButtonStyle.blurple, custom_id='role_button:TOsLibres', emoji="üíõ")
    async def TOsLibres(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798296784433578015
        await add_role(interaction, role_id, self.bot)

class PersistantButtonsSecond(View):
    def __init__(self, bot):
        self.bot = bot
        super().__init__(timeout=None)

    @discord.ui.button(label="Mises √† jour Discord", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesDiscord", emoji=discord.PartialEmoji(id=739080111554428948, name="DrMario"))
    async def UpdatesDiscord(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798300803009478657
        await add_role(interaction, role_id, self.bot)

    @discord.ui.button(label="Mises √† jour Devs", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesDevs", emoji=discord.PartialEmoji(id=737480515946545172, name="ROB"))
    async def UpdatesDevs(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798300268491178034
        await add_role(interaction, role_id, self.bot)

    @discord.ui.button(label="Mises √† jour Design", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesDesign", emoji=discord.PartialEmoji(id=752212651421204560, name="Graphiste"))
    async def UpdatesDesign(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798299938459090984
        await add_role(interaction, role_id, self.bot)

    @discord.ui.button(label="Mises √† jour Harmonie", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesHarmonie", emoji=discord.PartialEmoji(id=743285915413250059, name="soleil"))
    async def UpdatesHarmonie(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798299789413974036
        await add_role(interaction, role_id, self.bot)

    @discord.ui.button(label="Mises √† jour Twitter", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesTwitter", emoji=discord.PartialEmoji(id=739080111852355725, name="Falco"))
    async def UpdatesTwitter(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798963826749079582
        await add_role(interaction, role_id, self.bot)

class PersistantButtonsThird(View):
    def __init__(self, bot):
        self.bot = bot
        super().__init__(timeout=None)

    @discord.ui.button(label="Mises √† jour Fair Play", style=discord.ButtonStyle.blurple, custom_id="role_button:UpdatesFairPlay", emoji=discord.PartialEmoji(id=743285273353257051, name="Lune"))
    async def UpdatesFairPlay(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798304550460719135
        await add_role(interaction, role_id, self.bot)

    @discord.ui.button(label="Candidatures Fair Play", style=discord.ButtonStyle.blurple, custom_id="role_button:CandidaturesFairPlay", emoji=discord.PartialEmoji(id=743286485930868827, name="etoile"))
    async def CandidaturesFairPlay(self, button: discord.ui.Button, interaction: discord.Integration):
        role_id = 798305000316600350
        await add_role(interaction, role_id, self.bot)

"""
code for the final button
it doesn't work
class PersistantButtonFourth(View):
    def __init__(self, bot):
        self.bot = bot
        super().__init__(timeout=None)
        self.session = aiohttp.ClientSession(headers=headers)

    @discord.ui.button(label="Rafra√Æchir mon profil", style=discord.ButtonStyle.green, custom_id="role_button:RefreshProfile", emoji=discord.PartialEmoji(id=861654611236225054, name="sync"))
    async def RefreshProfile(self, button: discord.ui.Button, interaction: discord.Integration):
        async with self.session.get(f'https://smashtheque.fr/api/v1/discord_users/{interaction.user.id}/refetch') as resp:
            if resp.status == 404:
                await interaction.response.send_message(f"Vous n'√™tes pas enregistr√©s dans la smashth√®que !\nVous pouvez vous enregistrer sur https://smashtheque.fr/users/me, o√π en suivant les instructions dans <#750022794007412746>.", ephemeral=True)
            elif resp.status == 200:
                await interaction.response.send_message(f"Votre profil a √©t√© mis √† jour avec succ√®s !", ephemeral=True)
            else:
                await interaction.response.send_message(f"Il y a eu un probl√®me durant la mise √† jour de votre profil.", ephemeral=True)
                await self.bot.get_channel(747201417454026802).send(f"Il y a eu un probl√®me durant la mise √† jour d'un profil. Traceback : \nutilisateur : {interaction.user}\nID utilisateur : {interaction.user.id}\nstatus code : {resp.status}\nr√©ponse : {resp}")


"""


class ApplicationsTeam(Button):
    async def callback(self, interaction):
        print(interaction)




class SmashthequeRoles(commands.Bot):
    def __init__(self):
        super().__init__(command_prefix=commands.when_mentioned_or('$'), intents=discord.Intents.all())
        self.persistent_views_added = False

    async def on_ready(self):
        if not self.persistent_views_added:
            self.add_view(PersistantButtonsFirst(self))
            self.add_view(PersistantButtonsSecond(self))
            self.add_view(PersistantButtonsThird(self))
            #self.add_view(PersistantButtonFourth(self))
            self.persistent_views_added = True


        #await channel.send(messages[3], view=PersistantButtonFourth(self))
    
bot = SmashthequeRoles()

@bot.command(name="setupmessages")
@commands.is_owner()
async def setupmessages(ctx: commands.context):
    channel = bot.get_guild(737431333478989907).get_channel(861337441339047957)
    await channel.send(messages[0], view=PersistantButtonsFirst(bot))
    await channel.send(messages[1], view=PersistantButtonsSecond(bot))
    await channel.send(messages[2], view=PersistantButtonsThird(bot))

bot.run(BOT_TOKEN)